# -*- coding: utf-8 -*-
import os
import glob
import shutil
import json
from multiprocessing import Pool  #进程采用multiprocessing.Pool进程池，线程是自己封装的进程池，协程采用gevent的库

def mkPath(dir_path):
    for d_name in ['imagesCenter','imagesLeft','imagesRight']:
        if not os.path.exists(os.path.join(dir_path,d_name)):
            os.makedirs(os.path.join(dir_path,d_name))

def copyPic(dir_path,dest_path):
    shutil.copy(dir_path,dest_path)
    shutil.copy(dir_path.replace('imagesCenter','imagesLeft'),dest_path.replace('imagesCenter','imagesLeft'))
    shutil.copy(dir_path.replace('imagesCenter', 'imagesRight'), dest_path.replace('imagesCenter', 'imagesRight'))


def makeIndex(dir_path):
    os.chdir(dir_path)
    all_list = []

    for i in glob.iglob('*'):
        if os.path.isdir(i):      #测试是否目录名
            center_list = [{"fileName":path.replace('\\','/')} for path in glob.iglob(i+'\\imagesCenter\\*.jpg')]
            right_list = [{"fileName":oneline.get('fileName').replace('imagesCenter','imagesRight')} for oneline in center_list]
            left_list = [{"fileName":oneline.get('fileName').replace('imagesCenter','imagesLeft')} for oneline in center_list]
            index = {"title": "三镜头街景标注", "images": center_list, "imagesR": right_list, "imagesL": left_list}
            all_list.append(index)
    with open('index.txt', 'w', encoding='utf8') as fp:
        for i in all_list:
            fp.write(json.dumps(i,ensure_ascii=False) +'\n')

def collectPath(dir_path):
    page_num = int(dir_path.split('\\')[-1][5:10])
    if 2500 >= page_num >= 1501:
        return dir_path


def mkNewImagePath(dir_path,dest_path,ImageNum,fileNum,isTrue=1,process=3,collect_pic = 1):
    os.chdir(dir_path)
    num = 0
    filecount = 1
    if isTrue != 1:
        isTrue = 0

    p = Pool(processes=process)  
    if collect_pic == 1:
        pic_list = list(filter(collectPath,[path for path in glob.iglob(r'imagesCenter\*.jpg')]))
    else:
        pic_list = list([path for path in glob.iglob(r'imagesCenter\*.jpg')])
    for imagePath in pic_list:
        num += 1
        new_path = os.path.join(dest_path,str(filecount))
        mkPath(new_path)
        dst_path = os.path.join(new_path,imagePath)
        p.apply_async(copyPic,(imagePath,dst_path))
        if num % ImageNum == 0:
            if fileNum + isTrue == filecount:
                filecount = fileNum
            else:
                filecount += 1
    p.close()
    p.join()

if __name__ == '__main__':
    dir_path = r'E:\Python\上传图片'
    dest_path = r'E:\Python\导出'
    mkNewImagePath(dir_path,dest_path,10,100)   #一个任务上传10个视频，每个视频100帧图片
    makeIndex(dest_path)



