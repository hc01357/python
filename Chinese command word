# -*- coding: utf8 -*-
import re
import os
import glob
import shutil

def make_path(d_path):
    if not os.path.exists(d_path):
        os.makedirs(d_path)
    else:
        pass

def make_data(dir_path,dest_path):
    global all_dic
    global wav_dic
    wav_dic = {}
    for w_path in glob.iglob(dir_path):
        w_name = w_path.split('\\')[-1].split('.')[0].split('(')[0]
        d_name = w_name[5:10]
        d_path = dest_path + '\\data\\' + d_name + '\\wav'
        if all_dic.get(w_name) != None:
            make_path(d_path)
            if os.path.exists(d_path + '\\' + w_name + '.wav'):
                pass
            else:
                shutil.copy(w_path, d_path + '\\' + w_name + '.wav')
            wav_dic[w_name] = 1
    print(len(wav_dic))

def make_text(result_path,source_path,dest_path):
    all_dic = {}
    d_dic = {}
    all_txt = open(dest_path + '\\' + 'all.txt', 'w', encoding='utf8')
    for g_path in glob.iglob(result_path + '\\guid*.txt'):
        guid = open(g_path, encoding='utf8')
        for line in guid:
            li = line.split('\t')
            d_dic[li[1].replace('\n', '')] = li[0].split('.')[0]
        guid.close()

    for r_path in glob.iglob(result_path + '\\result.txt'):
        with open(r_path, encoding='utf8') as rf:
            for r_line in rf:
                r_line = re.sub("'_id': ObjectId\(['0-9A-Za-z]+\),", '', r_line)
                result_line = eval(r_line)
                r_name = d_dic.get(result_line.get('_guid'))
                effective = result_line.get('Effective')
                if effective == '1':
                    try:
                        all_dic[r_name] = 1
                        all_txt.write(r_line.replace('\n', '').replace('\r', '') + '\t' +r_name+'\n')
                    except Exception as e:
                        print(e)
                        # pass
                        # print(r_line,r_path)
    all_txt.close()
    return all_dic
def make_trans(txt_path,dest_path):
    global wav_dic
    words = r'[\u4e00-\u9fa5]'
    with open(txt_path, encoding='utf8') as fp:
        for line in fp:
            li = line.split('\t')
            result = eval(li[0])
            w_name = li[1].replace('\n', '')
            d_name = w_name[5:10]
            content = result.get('Content')
            if wav_dic.get(w_name) != None:
                d_path = dest_path + '\\data\\' + d_name + '\\wav'
                with open(d_path + '\\' + w_name + '.txt', 'w', encoding='utf8') as tf:
                    try:
                        tf.write('%s\t%s\n' % (w_name + '.wav', content.replace('\r\n', '')))
                    except:
                        print(w_name, '：无原始文本')
                tf.close()
            else:
                print(w_name, '：无音频')

def make_info(txt_path,dest_path):
    global wav_dic
    info_dic = {}
    with open(txt_path,encoding='utf8') as fp:
        for line in fp:
            li = line.split('\t')
            d_name = 'G%04d' %int(li[0])
            if info_dic.get(d_name)==None:
                with open(dest_path+'\\data\\'+d_name+'\\info.txt','w',encoding='utf8') as f:
                    f.write('%s\t%s\t%s\t%s\t%s\t%s\t%s' %(li[2],li[3],li[5],li[4],li[7],li[8].replace('\n',''),li[6]))
                info_dic[d_name] = 1



if __name__ == "__main__":
    all_dic = make_text(r'Z:\17_hecheng\出入库数据提取\多国\中文命令词\第五批\*',r'Z:\17_hecheng\出入库数据提取\多国\中文命令词\第五批\*\txt\*.txt',r'W:\语音交付\中文命令词\第五批')
    make_data(r'Z:\17_hecheng\出入库数据提取\多国\中文命令词\第五批\*\wav\*.wav', r'W:\语音交付\中文命令词\第五批')
    make_trans(r'W:\语音交付\中文命令词\第五批\all.txt',r'W:\语音交付\中文命令词\第五批')
    make_info(r'Z:\17_hecheng\出入库数据提取\多国\中文命令词\第五批\info.txt',r'W:\语音交付\中文命令词\第五批')
